/* tslint:disable */
/* eslint-disable */
/**
 * Taskusalkku API-spec
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MeetingContact,
    MeetingContactFromJSON,
    MeetingContactFromJSONTyped,
    MeetingContactToJSON,
    MeetingType,
    MeetingTypeFromJSON,
    MeetingTypeFromJSONTyped,
    MeetingTypeToJSON,
} from './';

/**
 * Meeting object
 * @export
 * @interface Meeting
 */
export interface Meeting {
    /**
     * 
     * @type {MeetingType}
     * @memberof Meeting
     */
    type: MeetingType;
    /**
     * Meeting time
     * @type {Date}
     * @memberof Meeting
     */
    time: Date;
    /**
     * Language in ISO-639-1 format
     * @type {string}
     * @memberof Meeting
     */
    language: string;
    /**
     * Participant count
     * @type {number}
     * @memberof Meeting
     */
    participantCount: number;
    /**
     * 
     * @type {MeetingContact}
     * @memberof Meeting
     */
    contact: MeetingContact;
    /**
     * Additional information
     * @type {string}
     * @memberof Meeting
     */
    additionalInformation?: string;
}

export function MeetingFromJSON(json: any): Meeting {
    return MeetingFromJSONTyped(json, false);
}

export function MeetingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Meeting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': MeetingTypeFromJSON(json['type']),
        'time': (new Date(json['time'])),
        'language': json['language'],
        'participantCount': json['participantCount'],
        'contact': MeetingContactFromJSON(json['contact']),
        'additionalInformation': !exists(json, 'additionalInformation') ? undefined : json['additionalInformation'],
    };
}

export function MeetingToJSON(value?: Meeting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': MeetingTypeToJSON(value.type),
        'time': (value.time.toISOString()),
        'language': value.language,
        'participantCount': value.participantCount,
        'contact': MeetingContactToJSON(value.contact),
        'additionalInformation': value.additionalInformation,
    };
}


